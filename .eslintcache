[{"C:\\Projects\\react-firechat\\src\\index.js":"1","C:\\Projects\\react-firechat\\src\\App.js":"2","C:\\Projects\\react-firechat\\src\\hooks.js":"3","C:\\Projects\\react-firechat\\src\\components\\Channel.js":"4","C:\\Projects\\react-firechat\\src\\components\\Loader.js":"5","C:\\Projects\\react-firechat\\src\\components\\Message.js":"6","C:\\Projects\\react-firechat\\src\\components\\Wmap.js":"7","C:\\Projects\\react-firechat\\src\\serviceWorker.js":"8","C:\\Projects\\react-firechat\\src\\components\\Chat.js":"9"},{"size":310,"mtime":1657057262763,"results":"10","hashOfConfig":"11"},{"size":622,"mtime":1661277192903,"results":"12","hashOfConfig":"11"},{"size":4899,"mtime":1657048626120,"results":"13","hashOfConfig":"11"},{"size":3442,"mtime":1661197241176,"results":"14","hashOfConfig":"11"},{"size":777,"mtime":1657048626120,"results":"15","hashOfConfig":"11"},{"size":1398,"mtime":1661185860611,"results":"16","hashOfConfig":"11"},{"size":3301,"mtime":1661280619813,"results":"17","hashOfConfig":"11"},{"size":5227,"mtime":1656947918549,"results":"18","hashOfConfig":"11"},{"size":2668,"mtime":1661280619107,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"oahm28",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\react-firechat\\src\\index.js",[],["40","41"],"C:\\Projects\\react-firechat\\src\\App.js",["42"],"C:\\Projects\\react-firechat\\src\\hooks.js",[],"C:\\Projects\\react-firechat\\src\\components\\Channel.js",["43","44","45"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase/app';\r\nimport { useFirestoreQuery } from '../hooks';\r\n// Components\r\nimport Message from './Message';\r\n\r\nconst Channel = ({ user = null }) => {\r\n  const db = firebase.firestore();\r\n  const messagesRef = db.collection('messages');\r\n  const messages = useFirestoreQuery(\r\n    messagesRef.orderBy('createdAt', 'desc').limit(100)\r\n  );\r\n\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const inputRef = useRef();\r\n  const bottomListRef = useRef();\r\n\r\n  const { uid, displayName, photoURL } = user;\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [inputRef]);\r\n\r\n  const handleOnChange = e => {\r\n    setNewMessage(e.target.value);\r\n  };\r\n\r\n  const handleOnSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const trimmedMessage = newMessage.trim();\r\n    if (trimmedMessage) {\r\n      // Add new message in Firestore\r\n      messagesRef.add({\r\n        text: trimmedMessage,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid : 'uid101',\r\n        displayName : 'displayName101',\r\n        photoURL : 'photoURL101',\r\n      });\r\n      // Clear input field\r\n      setNewMessage('');\r\n      // Scroll down to the bottom of the list\r\n      bottomListRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full\">\r\n      <div className=\"overflow-auto h-full\">\r\n        <div className=\"py-4 max-w-screen-lg mx-auto\">\r\n          <div className=\"border-b dark:border-gray-600 border-gray-200 py-8 mb-4\">\r\n            <div className=\"font-bold text-3xl text-center\">\r\n              <p className=\"mb-1\">Welcome to</p>\r\n              <p className=\"mb-3\">WMapChat</p>\r\n            </div>\r\n            <p className=\"text-gray-400 text-center\">\r\n              This is the beginning of this chat.\r\n            </p>\r\n          </div>\r\n          <ul>\r\n            {messages\r\n              ?.sort((first, second) =>\r\n                first?.createdAt?.seconds <= second?.createdAt?.seconds ? -1 : 1\r\n              )\r\n              ?.map(message => (\r\n                <li key={message.id}>\r\n                  <Message {...message} />\r\n                </li>\r\n              ))}\r\n          </ul>\r\n          <div ref={bottomListRef} />\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-6 mx-4\">\r\n        <form\r\n          onSubmit={handleOnSubmit}\r\n          className=\"flex flex-row bg-gray-200 dark:bg-coolDark-400 rounded-md px-4 py-3 z-10 max-w-screen-lg mx-auto dark:text-white shadow-md\"\r\n        >\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={handleOnChange}\r\n            placeholder=\"Type your message here...\"\r\n            className=\"flex-1 bg-transparent outline-none\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!newMessage}\r\n            className=\"uppercase font-semibold text-sm tracking-wider text-gray-500 hover:text-gray-900 dark:hover:text-white transition-colors\"\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nChannel.propTypes = {\r\n  user: PropTypes.shape({\r\n    uid: PropTypes.string,\r\n    displayName: PropTypes.string,\r\n    photoURL: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Channel;\r\n","C:\\Projects\\react-firechat\\src\\components\\Loader.js",[],"C:\\Projects\\react-firechat\\src\\components\\Message.js",[],"C:\\Projects\\react-firechat\\src\\components\\Wmap.js",["46","47"],"C:\\Projects\\react-firechat\\src\\serviceWorker.js",[],"C:\\Projects\\react-firechat\\src\\components\\Chat.js",["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":20,"column":11,"nodeType":"56","messageId":"57","endLine":20,"endColumn":14},{"ruleId":"54","severity":1,"message":"59","line":20,"column":16,"nodeType":"56","messageId":"57","endLine":20,"endColumn":27},{"ruleId":"54","severity":1,"message":"60","line":20,"column":29,"nodeType":"56","messageId":"57","endLine":20,"endColumn":37},{"ruleId":"54","severity":1,"message":"61","line":1,"column":36,"nodeType":"56","messageId":"57","endLine":1,"endColumn":44},{"ruleId":"54","severity":1,"message":"62","line":1,"column":46,"nodeType":"56","messageId":"57","endLine":1,"endColumn":58},{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":26},{"ruleId":"54","severity":1,"message":"63","line":44,"column":9,"nodeType":"56","messageId":"57","endLine":44,"endColumn":18},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'uid' is assigned a value but never used.","'displayName' is assigned a value but never used.","'photoURL' is assigned a value but never used.","'useState' is defined but never used.","'useMapEvents' is defined but never used.","'brandLogo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]